import java.util.Scanner;

public class TresEnRaya {
    // Atributos
    private char[][] tablero;
    private char jugadorActual;

    // Constructor
    public TresEnRaya() {
        tablero = new char[3][3];
        jugadorActual = 'X'; // El jugador 'X' comienza
        inicializarTablero();
    }

    // Método para inicializar el tablero
    private void inicializarTablero() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                tablero[i][j] = '-';
            }
        }
    }

    // Método para mostrar el tablero
    public void mostrarTablero() {
        System.out.println("\nTablero actual:");
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print(tablero[i][j] + " ");
            }
            System.out.println();
        }
    }

    // Método para realizar un movimiento
    public boolean realizarMovimiento(int fila, int columna) {
        if (fila < 0 || fila >= 3 || columna < 0 || columna >= 3) {
            System.out.println("Posición fuera del tablero. Intenta de nuevo.");
            return false;
        }

        if (tablero[fila][columna] != '-') {
            System.out.println("Casilla ocupada. Intenta de nuevo.");
            return false;
        }

        tablero[fila][columna] = jugadorActual;
        return true;
    }

    // Método para cambiar de turno
    public void cambiarTurno() {
        jugadorActual = (jugadorActual == 'X') ? 'O' : 'X';
    }

    // Método para comprobar si hay un ganador
    public char comprobarGanador() {
        // Comprobar filas y columnas
        for (int i = 0; i < 3; i++) {
            if (tablero[i][0] == tablero[i][1] && tablero[i][1] == tablero[i][2] && tablero[i][0] != '-') {
                return tablero[i][0];
            }
            if (tablero[0][i] == tablero[1][i] && tablero[1][i] == tablero[2][i] && tablero[0][i] != '-') {
                return tablero[0][i];
            }
        }

        // Comprobar diagonales
        if (tablero[0][0] == tablero[1][1] && tablero[1][1] == tablero[2][2] && tablero[0][0] != '-') {
            return tablero[0][0];
        }
        if (tablero[0][2] == tablero[1][1] && tablero[1][1] == tablero[2][0] && tablero[0][2] != '-') {
            return tablero[0][2];
        }

        // No hay ganador
        return '-';
    }

    // Método para comprobar si hay un empate
    public boolean esEmpate() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (tablero[i][j] == '-') {
                    return false;
                }
            }
        }
        return true;
    }
}
------------------------CLASE------------------------------------------------
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        TresEnRaya juego = new TresEnRaya(); // Crear un objeto de TresEnRaya
        boolean juegoTerminado = false;

        System.out.println("¡Bienvenido al Tres en Raya!");
        juego.mostrarTablero();

        while (!juegoTerminado) {
            System.out.println("\nTurno del jugador: " + (juego.jugadorActual == 'X' ? "X" : "O"));
            System.out.print("Ingrese la fila (0-2): ");
            int fila = scanner.nextInt();
            System.out.print("Ingrese la columna (0-2): ");
            int columna = scanner.nextInt();

            if (juego.realizarMovimiento(fila, columna)) {
                juego.mostrarTablero();
                char ganador = juego.comprobarGanador();
                if (ganador != '-') {
                    System.out.println("¡El jugador " + ganador + " ha ganado!");
                    juegoTerminado = true;
                } else if (juego.esEmpate()) {
                    System.out.println("¡Empate! No quedan movimientos.");
                    juegoTerminado = true;
                } else {
                    juego.cambiarTurno();
                }
            }
        }
    }
}
